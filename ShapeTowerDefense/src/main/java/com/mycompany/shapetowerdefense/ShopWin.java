/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.shapetowerdefense;

import java.util.ArrayList;
import java.util.Random;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author behnf
 */
public class ShopWin extends javax.swing.JFrame {
    DataManager dm = DataManager.getInstance();
    private ArrayList<ShapeCharacter> allCharacters;
    private Random random;

    /**
     * Creates new form Shop
     */
    public ShopWin() {
        initComponents();
        allCharacters = ShapeCharacter.getAllShapes();
        random = new Random();
        updateLabels();
    }

    private void buyCharacter() {
        // Spend gold first
        if (!dm.spendGold(50)) {
            JOptionPane.showMessageDialog(this, "Not enough coins!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Roll for rarity (0-100)
        int roll = random.nextInt(100);
        String selectedRarity;
        if (roll < 40) {
            selectedRarity = "Common";
        } else if (roll < 65) {
            selectedRarity = "Uncommon";
        } else if (roll < 80) {
            selectedRarity = "Rare";
        } else if (roll < 90) {
            selectedRarity = "Epic";
        } else if (roll < 97) {
            selectedRarity = "Legendary";
        } else {
            selectedRarity = "Mythic";
        }

        // Get random character of that rarity
        ArrayList<ShapeCharacter> filtered = new ArrayList<>();
        for (ShapeCharacter character : allCharacters) {
            if (character.getRarity().equalsIgnoreCase(selectedRarity)) {
                filtered.add(character);
            }
        }

        ShapeCharacter newCharacter = filtered.get(random.nextInt(filtered.size()));

        // Check for duplicates against DataManager's inventory
        boolean isDuplicate = false;
        for (ShapeCharacter owned : dm.getInventoryUnits()) {
            if (owned.getShapeType().equals(newCharacter.getShapeType())) {
                isDuplicate = true;
                break;
            }
        }

        if (isDuplicate) {
            dm.addGold(25); // Partial refund
            JOptionPane.showMessageDialog(this,
                    "Duplicate " + newCharacter.getShapeType() + "! Refunded 25 coins.",
                    "Duplicate",
                    JOptionPane.INFORMATION_MESSAGE);
        } else {
            dm.addShape(newCharacter);
            dm.addUnitCount(1);

            JOptionPane.showMessageDialog(this,
                    "New " + newCharacter.getRarity() + " character: " + newCharacter.getShapeType(),
                    "Unlocked",
                    JOptionPane.INFORMATION_MESSAGE);

            // Update display
            rarityLabel.setText("Rarity: " + newCharacter.getRarity());
            nameLabel.setText("Name: " + newCharacter.getShapeType());
            healthLabel.setText("Health: " + newCharacter.getHealth());
            damageLabel.setText("Damage: " + newCharacter.getDamage());
        }

        updateLabels();
    }

    private void upgradeFoodGeneration() {
        int upgradeCost = 200; // Set upgrade cost

        if (!dm.spendGold(upgradeCost)) {
            JOptionPane.showMessageDialog(this, "Not enough coins!","Warning",
        JOptionPane.WARNING_MESSAGE);
            return;
        }

        double upgradeAmount = 1; // Set upgrade amount
        dm.upgradeFoodGenerationMultiplier(upgradeAmount);

        generationLabel.setText("Generation Multiplier: " + dm.getFoodGenerationMultiplier());
        updateLabels();
    }

    private void updateLabels() {
        goldLabel.setText("üí∞Coins: " + dm.getGold());
        generationLabel.setText("Generation Multiplier: " + dm.getFoodGenerationMultiplier());
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        UiPanel = new javax.swing.JPanel();
        buyButton = new javax.swing.JButton();
        upgradeFoodButton = new javax.swing.JButton();
        data1Panel = new javax.swing.JPanel();
        toInventoryButton = new javax.swing.JButton();
        goldLabel = new javax.swing.JLabel();
        toLobbyButton = new javax.swing.JButton();
        data2Panel = new javax.swing.JPanel();
        rarityLabel = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        healthLabel = new javax.swing.JLabel();
        damageLabel = new javax.swing.JLabel();
        data3Panel = new javax.swing.JPanel();
        generationLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Shop");
        setResizable(false);

        UiPanel.setBackground(new java.awt.Color(0, 153, 204));

        buyButton.setBackground(new java.awt.Color(255, 204, 153));
        buyButton.setForeground(new java.awt.Color(255, 0, 0));
        buyButton.setText("üí∞Buy Character(50)");
        buyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buyButtonActionPerformed(evt);
            }
        });

        upgradeFoodButton.setBackground(new java.awt.Color(255, 204, 153));
        upgradeFoodButton.setForeground(new java.awt.Color(255, 51, 51));
        upgradeFoodButton.setText("üí∞Upgrade Food Generation(200)");
        upgradeFoodButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upgradeFoodButtonActionPerformed(evt);
            }
        });

        data1Panel.setBackground(new java.awt.Color(153, 204, 255));
        data1Panel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 255, 0), new java.awt.Color(0, 204, 255), new java.awt.Color(255, 0, 255), new java.awt.Color(255, 0, 0)));

        toInventoryButton.setBackground(new java.awt.Color(255, 204, 153));
        toInventoryButton.setText("üì¶Inventory");
        toInventoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toInventoryButtonActionPerformed(evt);
            }
        });

        goldLabel.setBackground(new java.awt.Color(153, 204, 255));
        goldLabel.setForeground(new java.awt.Color(255, 255, 0));
        goldLabel.setText("üí∞Gold:");

        toLobbyButton.setBackground(new java.awt.Color(255, 204, 153));
        toLobbyButton.setText("üè†Lobby");
        toLobbyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toLobbyButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout data1PanelLayout = new javax.swing.GroupLayout(data1Panel);
        data1Panel.setLayout(data1PanelLayout);
        data1PanelLayout.setHorizontalGroup(
            data1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(data1PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(data1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(data1PanelLayout.createSequentialGroup()
                        .addComponent(toInventoryButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(toLobbyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(goldLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        data1PanelLayout.setVerticalGroup(
            data1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(data1PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(data1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(toInventoryButton)
                    .addComponent(toLobbyButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(goldLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        data2Panel.setBackground(new java.awt.Color(153, 204, 255));
        data2Panel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(51, 51, 255), new java.awt.Color(255, 0, 204), new java.awt.Color(0, 204, 204), new java.awt.Color(0, 153, 204)));

        rarityLabel.setFont(new java.awt.Font("Snap ITC", 0, 12)); // NOI18N
        rarityLabel.setForeground(new java.awt.Color(255, 0, 255));
        rarityLabel.setText("Rarity");

        nameLabel.setFont(new java.awt.Font("Snap ITC", 0, 12)); // NOI18N
        nameLabel.setForeground(new java.awt.Color(51, 51, 255));
        nameLabel.setText("Name:");

        healthLabel.setFont(new java.awt.Font("Snap ITC", 0, 12)); // NOI18N
        healthLabel.setForeground(new java.awt.Color(0, 153, 255));
        healthLabel.setText("Health:");

        damageLabel.setFont(new java.awt.Font("Snap ITC", 0, 12)); // NOI18N
        damageLabel.setForeground(new java.awt.Color(0, 255, 255));
        damageLabel.setText("Damage:");

        javax.swing.GroupLayout data2PanelLayout = new javax.swing.GroupLayout(data2Panel);
        data2Panel.setLayout(data2PanelLayout);
        data2PanelLayout.setHorizontalGroup(
            data2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(data2PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(data2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rarityLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(healthLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(damageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE))
                .addContainerGap())
        );
        data2PanelLayout.setVerticalGroup(
            data2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(data2PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rarityLabel)
                .addGap(12, 12, 12)
                .addComponent(nameLabel)
                .addGap(12, 12, 12)
                .addComponent(healthLabel)
                .addGap(12, 12, 12)
                .addComponent(damageLabel)
                .addContainerGap(47, Short.MAX_VALUE))
        );

        data3Panel.setBackground(new java.awt.Color(153, 204, 255));
        data3Panel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 102, 102), new java.awt.Color(255, 0, 0), new java.awt.Color(255, 204, 0), new java.awt.Color(255, 102, 204)));

        generationLabel.setFont(new java.awt.Font("Snap ITC", 0, 12)); // NOI18N
        generationLabel.setForeground(new java.awt.Color(255, 0, 51));
        generationLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        generationLabel.setText("Generation Multiplier:");

        javax.swing.GroupLayout data3PanelLayout = new javax.swing.GroupLayout(data3Panel);
        data3Panel.setLayout(data3PanelLayout);
        data3PanelLayout.setHorizontalGroup(
            data3PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(data3PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(generationLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        data3PanelLayout.setVerticalGroup(
            data3PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(data3PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(generationLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout UiPanelLayout = new javax.swing.GroupLayout(UiPanel);
        UiPanel.setLayout(UiPanelLayout);
        UiPanelLayout.setHorizontalGroup(
            UiPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UiPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(UiPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, UiPanelLayout.createSequentialGroup()
                        .addGroup(UiPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(UiPanelLayout.createSequentialGroup()
                                .addComponent(data2Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 2, Short.MAX_VALUE))
                            .addComponent(buyButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(UiPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(upgradeFoodButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(data3Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(data1Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        UiPanelLayout.setVerticalGroup(
            UiPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, UiPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(data1Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(UiPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buyButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(upgradeFoodButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(UiPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(data3Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(data2Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(UiPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(UiPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buyButtonActionPerformed
                buyCharacter();
    }//GEN-LAST:event_buyButtonActionPerformed

    private void toInventoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toInventoryButtonActionPerformed
        new InventoryWin().setVisible(true);
                dispose();
    }//GEN-LAST:event_toInventoryButtonActionPerformed

    private void upgradeFoodButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upgradeFoodButtonActionPerformed
        upgradeFoodGeneration();
    }//GEN-LAST:event_upgradeFoodButtonActionPerformed

    private void toLobbyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toLobbyButtonActionPerformed
        new LobbyWin().setVisible(true);
                dispose();
    }//GEN-LAST:event_toLobbyButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                } // what is all this autogenerated code
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ShopWin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ShopWin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ShopWin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ShopWin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ShopWin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel UiPanel;
    private javax.swing.JButton buyButton;
    private javax.swing.JLabel damageLabel;
    private javax.swing.JPanel data1Panel;
    private javax.swing.JPanel data2Panel;
    private javax.swing.JPanel data3Panel;
    private javax.swing.JLabel generationLabel;
    private javax.swing.JLabel goldLabel;
    private javax.swing.JLabel healthLabel;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JLabel rarityLabel;
    private javax.swing.JButton toInventoryButton;
    private javax.swing.JButton toLobbyButton;
    private javax.swing.JButton upgradeFoodButton;
    // End of variables declaration//GEN-END:variables
}
