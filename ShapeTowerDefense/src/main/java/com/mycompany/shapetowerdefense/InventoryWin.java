/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.shapetowerdefense;

import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author behnf
 */
public class InventoryWin extends javax.swing.JFrame {
    DataManager dm = DataManager.getInstance();
    private DefaultListModel<String> inventoryModel;
    private DefaultTableModel equippedListModel;
    /**
     * Creates new form Inventory
     */
    public InventoryWin() {
        initComponents();
        inventoryModel = new DefaultListModel<>();
        
        // Load characters from DataManager into the inventory list
        for (ShapeCharacter sc : dm.getInventoryUnits()) {
            inventoryModel.addElement(sc.getShapeType());
        }
        
        inventory.setModel(inventoryModel);
        equippedListModel = new DefaultTableModel(new String[]{"Equipped Characters"}, 0);
        equippedList.setModel(equippedListModel);
        loadEquippedUnits();
        refreshEquippedList();
    }
    private void loadEquippedUnits() {
        equippedListModel.setRowCount(0); // Clear the table

        // Only show up to 3 equipped characters
        for (int i = 0; i < Math.min(3, dm.getEquippedUnits().size()); i++) {
            ShapeCharacter sc = dm.getEquippedUnits().get(i);
            equippedListModel.addRow(new Object[]{sc.getShapeType()});
        }

        // If we have less than 3, add empty slots
        for (int i = dm.getEquippedUnits().size(); i < 3; i++) {
            equippedListModel.addRow(new Object[]{"[Empty Slot]"});
        }
    }
    
    private void refreshEquippedList() {
        equippedListModel.setRowCount(0); // Clear the table

        // Show all 3 slots
        for (int i = 0; i < 3; i++) {
            if (i < dm.getEquippedUnits().size()) {
                ShapeCharacter sc = dm.getEquippedUnits().get(i);
                equippedListModel.addRow(new Object[]{sc.getShapeType()});
            } else {
                equippedListModel.addRow(new Object[]{"[Empty Slot]"});
            }
        }
    }

    private void equipCharacterToSlot(int slotIndex) {
        String selectedName = inventory.getSelectedValue();
        if (selectedName == null) {
            JOptionPane.showMessageDialog(this, "Please select a character from your inventory to equip.","Warning",
        JOptionPane.WARNING_MESSAGE);
            return;
        }

        ShapeCharacter selectedCharacter = dm.getCharacterByName(selectedName);
        if (selectedCharacter == null) {
            JOptionPane.showMessageDialog(this, "Character data not found.","Warning",
        JOptionPane.WARNING_MESSAGE);
            return;
        }

        ArrayList<ShapeCharacter> equipped = dm.getEquippedUnits();

        // Ensure the list has exactly 3 slots
        while (equipped.size() < 3) {
            equipped.add(null);
        }

        // Replace or add in the specific slot
        equipped.set(slotIndex, selectedCharacter);

        // Remove trailing nulls if needed (optional)
        for (int i = equipped.size() - 1; i >= 0; i--) {
            if (equipped.get(i) == null) {
                equipped.remove(i);
            } else {
                break;
            }
        }

        dm.setEquippedUnits(equipped); // Save the updated list
        refreshEquippedList(); // Refresh the table

        JOptionPane.showMessageDialog(this,
                selectedCharacter.getShapeType() + " equipped in slot " + (slotIndex + 1),
                "Success",
                JOptionPane.INFORMATION_MESSAGE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        equippedList = new javax.swing.JTable();
        equipButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        inventory = new javax.swing.JList<>();
        goToShop = new javax.swing.JButton();
        goToLobby = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        equipButton2 = new javax.swing.JButton();
        equipButton3 = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Inventory");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(0, 153, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createCompoundBorder());

        equippedList.setBackground(new java.awt.Color(153, 204, 255));
        equippedList.setFont(new java.awt.Font("Snap ITC", 0, 12)); // NOI18N
        equippedList.setForeground(new java.awt.Color(51, 51, 255));
        equippedList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Character1", "Character2", "Character3"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        equippedList.setEnabled(false);
        equippedList.setFocusable(false);
        jScrollPane4.setViewportView(equippedList);
        if (equippedList.getColumnModel().getColumnCount() > 0) {
            equippedList.getColumnModel().getColumn(0).setResizable(false);
            equippedList.getColumnModel().getColumn(1).setResizable(false);
            equippedList.getColumnModel().getColumn(2).setResizable(false);
        }

        equipButton1.setBackground(new java.awt.Color(255, 204, 153));
        equipButton1.setFont(new java.awt.Font("Snap ITC", 0, 12)); // NOI18N
        equipButton1.setForeground(new java.awt.Color(255, 0, 51));
        equipButton1.setText("Equip Slot1");
        equipButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                equipButton1ActionPerformed(evt);
            }
        });

        inventory.setBackground(new java.awt.Color(153, 204, 255));
        inventory.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(51, 51, 255), null, null));
        inventory.setFont(new java.awt.Font("Snap ITC", 0, 12)); // NOI18N
        inventory.setForeground(new java.awt.Color(51, 51, 255));
        inventory.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        inventory.setAutoscrolls(false);
        jScrollPane1.setViewportView(inventory);

        goToShop.setBackground(new java.awt.Color(255, 204, 153));
        goToShop.setText("üõíShop");
        goToShop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goToShopActionPerformed(evt);
            }
        });

        goToLobby.setBackground(new java.awt.Color(255, 204, 153));
        goToLobby.setText("üè†Lobby");
        goToLobby.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goToLobbyActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Snap ITC", 0, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 255, 51));
        jLabel1.setText("Equipped Characters");

        jLabel2.setFont(new java.awt.Font("Snap ITC", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 255, 51));
        jLabel2.setText("Inventory");

        equipButton2.setBackground(new java.awt.Color(255, 204, 153));
        equipButton2.setFont(new java.awt.Font("Snap ITC", 0, 12)); // NOI18N
        equipButton2.setForeground(new java.awt.Color(255, 0, 51));
        equipButton2.setText("Equip Slot2");
        equipButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                equipButton2ActionPerformed(evt);
            }
        });

        equipButton3.setBackground(new java.awt.Color(255, 204, 153));
        equipButton3.setFont(new java.awt.Font("Snap ITC", 0, 12)); // NOI18N
        equipButton3.setForeground(new java.awt.Color(255, 0, 51));
        equipButton3.setText("Equip Slot3");
        equipButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                equipButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(equipButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(equipButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(equipButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(goToLobby, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66)
                .addComponent(jLabel2)
                .addGap(70, 70, 70)
                .addComponent(goToShop, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(58, 58, 58))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(11, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(goToLobby)
                    .addComponent(jLabel2)
                    .addComponent(goToShop))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(equipButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(equipButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(equipButton3))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void equipButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_equipButton1ActionPerformed
        equipCharacterToSlot(0);
    }//GEN-LAST:event_equipButton1ActionPerformed

    private void goToShopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goToShopActionPerformed
        new ShopWin().setVisible(true);
                dispose();
    }//GEN-LAST:event_goToShopActionPerformed

    private void goToLobbyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goToLobbyActionPerformed
        new LobbyWin().setVisible(true);
                dispose();
    }//GEN-LAST:event_goToLobbyActionPerformed

    private void equipButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_equipButton2ActionPerformed
        equipCharacterToSlot(1);
    }//GEN-LAST:event_equipButton2ActionPerformed

    private void equipButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_equipButton3ActionPerformed
        equipCharacterToSlot(2);
    }//GEN-LAST:event_equipButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InventoryWin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InventoryWin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InventoryWin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InventoryWin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InventoryWin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton equipButton1;
    private javax.swing.JButton equipButton2;
    private javax.swing.JButton equipButton3;
    private javax.swing.JTable equippedList;
    private javax.swing.JButton goToLobby;
    private javax.swing.JButton goToShop;
    private javax.swing.JList<String> inventory;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
